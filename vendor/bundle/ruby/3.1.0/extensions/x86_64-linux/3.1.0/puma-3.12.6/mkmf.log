have_library: checking for BIO_read() in -lcrypto... -------------------- yes

LD_LIBRARY_PATH=.:/home/ec2-user/.rbenv/versions/3.1.2/lib "gcc -o conftest -I/home/ec2-user/.rbenv/versions/3.1.2/include/ruby-3.1.0/x86_64-linux -I/home/ec2-user/.rbenv/versions/3.1.2/include/ruby-3.1.0/ruby/backward -I/home/ec2-user/.rbenv/versions/3.1.2/include/ruby-3.1.0 -I.    -std=gnu17  -fPIC conftest.c  -L. -L/home/ec2-user/.rbenv/versions/3.1.2/lib -Wl,-rpath,/home/ec2-user/.rbenv/versions/3.1.2/lib -L. -fstack-protector-strong -rdynamic -Wl,-export-dynamic -Wl,--no-as-needed     -Wl,-rpath,/home/ec2-user/.rbenv/versions/3.1.2/lib -L/home/ec2-user/.rbenv/versions/3.1.2/lib -lruby  -lm  -lc"
checked program was:
/* begin */
1: #include "ruby.h"
2: 
3: int main(int argc, char **argv)
4: {
5:   return !!argv[argc];
6: }
/* end */

LD_LIBRARY_PATH=.:/home/ec2-user/.rbenv/versions/3.1.2/lib "gcc -o conftest -I/home/ec2-user/.rbenv/versions/3.1.2/include/ruby-3.1.0/x86_64-linux -I/home/ec2-user/.rbenv/versions/3.1.2/include/ruby-3.1.0/ruby/backward -I/home/ec2-user/.rbenv/versions/3.1.2/include/ruby-3.1.0 -I.    -std=gnu17  -fPIC conftest.c  -L. -L/home/ec2-user/.rbenv/versions/3.1.2/lib -Wl,-rpath,/home/ec2-user/.rbenv/versions/3.1.2/lib -L. -fstack-protector-strong -rdynamic -Wl,-export-dynamic -Wl,--no-as-needed     -Wl,-rpath,/home/ec2-user/.rbenv/versions/3.1.2/lib -L/home/ec2-user/.rbenv/versions/3.1.2/lib -lruby -lcrypto  -lm  -lc"
conftest.c: In function ‘t’:
conftest.c:14:57: error: ‘BIO_read’ undeclared (first use in this function)
   14 | int t(void) { void ((*volatile p)()); p = (void ((*)()))BIO_read; return !p; }
      |                                                         ^~~~~~~~
conftest.c:14:57: note: each undeclared identifier is reported only once for each function it appears in
checked program was:
/* begin */
 1: #include "ruby.h"
 2: 
 3: /*top*/
 4: extern int t(void);
 5: int main(int argc, char **argv)
 6: {
 7:   if (argc > 1000000) {
 8:     int (* volatile tp)(void)=(int (*)(void))&t;
 9:     printf("%d", (*tp)());
10:   }
11: 
12:   return !!argv[argc];
13: }
14: int t(void) { void ((*volatile p)()); p = (void ((*)()))BIO_read; return !p; }
/* end */

LD_LIBRARY_PATH=.:/home/ec2-user/.rbenv/versions/3.1.2/lib "gcc -o conftest -I/home/ec2-user/.rbenv/versions/3.1.2/include/ruby-3.1.0/x86_64-linux -I/home/ec2-user/.rbenv/versions/3.1.2/include/ruby-3.1.0/ruby/backward -I/home/ec2-user/.rbenv/versions/3.1.2/include/ruby-3.1.0 -I.    -std=gnu17  -fPIC conftest.c  -L. -L/home/ec2-user/.rbenv/versions/3.1.2/lib -Wl,-rpath,/home/ec2-user/.rbenv/versions/3.1.2/lib -L. -fstack-protector-strong -rdynamic -Wl,-export-dynamic -Wl,--no-as-needed     -Wl,-rpath,/home/ec2-user/.rbenv/versions/3.1.2/lib -L/home/ec2-user/.rbenv/versions/3.1.2/lib -lruby -lcrypto  -lm  -lc"
checked program was:
/* begin */
 1: #include "ruby.h"
 2: 
 3: /*top*/
 4: extern int t(void);
 5: int main(int argc, char **argv)
 6: {
 7:   if (argc > 1000000) {
 8:     int (* volatile tp)(void)=(int (*)(void))&t;
 9:     printf("%d", (*tp)());
10:   }
11: 
12:   return !!argv[argc];
13: }
14: extern void BIO_read();
15: int t(void) { BIO_read(); return 0; }
/* end */

--------------------

have_library: checking for SSL_CTX_new() in -lssl... -------------------- yes

LD_LIBRARY_PATH=.:/home/ec2-user/.rbenv/versions/3.1.2/lib "gcc -o conftest -I/home/ec2-user/.rbenv/versions/3.1.2/include/ruby-3.1.0/x86_64-linux -I/home/ec2-user/.rbenv/versions/3.1.2/include/ruby-3.1.0/ruby/backward -I/home/ec2-user/.rbenv/versions/3.1.2/include/ruby-3.1.0 -I.    -std=gnu17  -fPIC conftest.c  -L. -L/home/ec2-user/.rbenv/versions/3.1.2/lib -Wl,-rpath,/home/ec2-user/.rbenv/versions/3.1.2/lib -L. -fstack-protector-strong -rdynamic -Wl,-export-dynamic -Wl,--no-as-needed    -lcrypto  -Wl,-rpath,/home/ec2-user/.rbenv/versions/3.1.2/lib -L/home/ec2-user/.rbenv/versions/3.1.2/lib -lruby -lssl -lcrypto  -lm  -lc"
conftest.c: In function ‘t’:
conftest.c:14:57: error: ‘SSL_CTX_new’ undeclared (first use in this function)
   14 | int t(void) { void ((*volatile p)()); p = (void ((*)()))SSL_CTX_new; return !p; }
      |                                                         ^~~~~~~~~~~
conftest.c:14:57: note: each undeclared identifier is reported only once for each function it appears in
checked program was:
/* begin */
 1: #include "ruby.h"
 2: 
 3: /*top*/
 4: extern int t(void);
 5: int main(int argc, char **argv)
 6: {
 7:   if (argc > 1000000) {
 8:     int (* volatile tp)(void)=(int (*)(void))&t;
 9:     printf("%d", (*tp)());
10:   }
11: 
12:   return !!argv[argc];
13: }
14: int t(void) { void ((*volatile p)()); p = (void ((*)()))SSL_CTX_new; return !p; }
/* end */

LD_LIBRARY_PATH=.:/home/ec2-user/.rbenv/versions/3.1.2/lib "gcc -o conftest -I/home/ec2-user/.rbenv/versions/3.1.2/include/ruby-3.1.0/x86_64-linux -I/home/ec2-user/.rbenv/versions/3.1.2/include/ruby-3.1.0/ruby/backward -I/home/ec2-user/.rbenv/versions/3.1.2/include/ruby-3.1.0 -I.    -std=gnu17  -fPIC conftest.c  -L. -L/home/ec2-user/.rbenv/versions/3.1.2/lib -Wl,-rpath,/home/ec2-user/.rbenv/versions/3.1.2/lib -L. -fstack-protector-strong -rdynamic -Wl,-export-dynamic -Wl,--no-as-needed    -lcrypto  -Wl,-rpath,/home/ec2-user/.rbenv/versions/3.1.2/lib -L/home/ec2-user/.rbenv/versions/3.1.2/lib -lruby -lssl -lcrypto  -lm  -lc"
checked program was:
/* begin */
 1: #include "ruby.h"
 2: 
 3: /*top*/
 4: extern int t(void);
 5: int main(int argc, char **argv)
 6: {
 7:   if (argc > 1000000) {
 8:     int (* volatile tp)(void)=(int (*)(void))&t;
 9:     printf("%d", (*tp)());
10:   }
11: 
12:   return !!argv[argc];
13: }
14: extern void SSL_CTX_new();
15: int t(void) { SSL_CTX_new(); return 0; }
/* end */

--------------------

have_header: checking for openssl/bio.h... -------------------- yes

LD_LIBRARY_PATH=.:/home/ec2-user/.rbenv/versions/3.1.2/lib "gcc -I/home/ec2-user/.rbenv/versions/3.1.2/include/ruby-3.1.0/x86_64-linux -I/home/ec2-user/.rbenv/versions/3.1.2/include/ruby-3.1.0/ruby/backward -I/home/ec2-user/.rbenv/versions/3.1.2/include/ruby-3.1.0 -I.    -std=gnu17  -fPIC   -c conftest.c"
checked program was:
/* begin */
1: #include "ruby.h"
2: 
3: #include <openssl/bio.h>
/* end */

--------------------

